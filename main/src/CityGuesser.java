import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

public class CityGuesser extends JFrame {
    private JTextArea textArea1;
    private JButton enterButton;
    private JPanel mainPanel;
    private JTextField textField1;
    private boolean enterPressed;

    public CityGuesser(String title) {
        super(title);
        enterPressed = false;

        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setContentPane(mainPanel);
        this.pack();

        enterButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                enterPressed = true;
                textField1.setText("");
            }
        });
        textField1.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == 10) {
                    enterPressed = true;
                    textField1.setText("");
                }
            }
        });
        this.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == 10) {
                    enterPressed = true;
                    textField1.setText("");
                }
            }
        });
    }

    //send the questions, then get the response for that question. then, continue calling until all questions done, and then send score to sendScore()
    public String sendQuestion(String question, String[] answers) {
        textField1.show();
        String text = question;
        for (String s : answers) {
            text += "\n" + s;
        }
        textArea1.setText(text);
        while (!ensureValidChoice(textField1.getText(), 5)) {
            while (!enterPressed) {
                "".split(" ");
            }
            if (ensureValidChoice(textField1.getText(), 5)) break;
            enterPressed = false;
            textArea1.setText(text + "\n That is not an answer choice!");
        }
        enterPressed = false;
        //String a = textField1.

        return textField1.getText();
        //return "a";
    }

    public void sendResult(String result) {
        textField1.hide();
        textArea1.setText(result + "\n Press Enter To Continue");
        while (!enterPressed) {
            "".split(" ");
        }
        enterPressed = false;
        return;
    }

    public void sendScore(String scoreText) {
        textArea1.setText(scoreText);
        return;
    }

    private static boolean ensureValidChoice(String input, int nChoices) {
        String ALPHABET = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        input = input.toUpperCase();
        return input.length() == 1 && ALPHABET.contains(input) && ALPHABET.indexOf(input) <= nChoices;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridBagLayout());
        mainPanel.setEnabled(false);
        textArea1 = new JTextArea();
        textArea1.setEditable(false);
        textArea1.setEnabled(true);
        textArea1.setText("");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.gridwidth = 3;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainPanel.add(textArea1, gbc);
        enterButton = new JButton();
        enterButton.setBackground(new Color(-51140));
        enterButton.setText("Enter");
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainPanel.add(enterButton, gbc);
        textField1 = new JTextField();
        textField1.setBackground(new Color(-1512961));
        textField1.setColumns(4);
        textField1.setForeground(new Color(-16777216));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        mainPanel.add(textField1, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
